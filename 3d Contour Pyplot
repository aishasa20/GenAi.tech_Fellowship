import plotly.graph_objects as go
import numpy as np
import matplotlib

X, Y = np.mgrid[-3:5:100j, -3:5:100j] # create a grid of X, Y values
Z = np.exp(-(abs(X)**2 + abs(Y)**2)) +  0.8 * np.exp(-4 * ((abs(X - 1.5))**4.2 + (abs(Y - 1.4))**4.2)) # create a grid of Z values using gaussian functions
    
fig = go.Figure(data=[ 
    go.Surface(     # create a surface plot
        z=Z, x=X, y=Y, 
        contours= {
            "z": {"show": True, "start": 0, "end": 1, "size": 1/60,
                  "width": 2, "usecolormap": True}, 
            "x": {"show": True, "start": 0, "end": 1, "size": 1/60,
                  "width": 2, "usecolormap": True}, 
            "y": {"show": True, "start": 0, "end": 1, "size": 1/60,
                  "width": 2, "usecolormap": True}
        }, showscale=False, colorscale="Aggrnyl"
       )], layout=dict(
    scene=dict(aspectmode="manual", aspectratio=dict(x=1.5, y=1.5, z=1), camera=dict(
            eye=dict(x=1.5, y=-1.5, z=0.5))
    )))


w, h, dpi = 15, 7.5, 300 # width and heigh in inches
fig.write_image(file="pyplot_contour.png", width=w*dpi, height=h*dpi, scale=1) # save the figure as a png file







